#!/usr/bin/env perl
#
# Programmer:    Craig Stuart Sapp <craig.stanford.edu>
# Creation Date: Sun 06 Mar 2022 05:57:21 PM PST
# Last Modified: Sat Jan 13 02:06:03 AM EST 2024
# Filename:      cache/bin/derivative-prange
# Syntax:        perl 5
# vim:           ts=3
#
# Description:   Create pitch range plots, one duration-weighted, and the other by note attacks.
#                Two files are created for each plot (1) PMX file for rendering in SCORE, and
#                another the final SVG image.
#
# Options:
#     -f   == Force recalculation of derivative files (overwrite).
#

use strict;
use Getopt::Long;

my $prange = `which prange`;
chomp $prange;
die "ERROR: Cannot locate prange command\n" if $prange =~ /^\s*$/;

my $pmx2svg = `which pmx2svg`;
chomp $pmx2svg;
die "ERROR: Cannot locate pmx2svg command\n" if $pmx2svg =~ /^\s*$/;

my $gzip = `which gzip`;
chomp $gzip;
die "ERROR: Cannot locate gzip command\n" if $gzip =~ /^\s*$/;

my $forceQ = 0;
Getopt::Long::Configure("bundling");
GetOptions (
   'f|force' => \$forceQ
);

die "Usage: $0 md5id\n" if @ARGV != 1;

my $md5id = $ARGV[0];

print STDERR "Processing id $md5id\n";

die "Invalid MD5 value: $md5id\n" if $md5id !~ /^[0-9a-f]{8}$/;

my $inputfile = "$md5id.krn";

die "ERROR: Cannot find input file $inputfile\n" if !-r $inputfile;

if ($forceQ) {
	unlink("$md5id-prange-attack.pmx.gz");
	unlink("$md5id-prange-duration.pmx.gz");
	unlink("$md5id-prange-attack.svg.gz");
	unlink("$md5id-prange-duration.svg.gz");
	unlink("$md5id-prange-attack-final.pmx.gz");
	unlink("$md5id-prange-duration-final.pmx.gz");
	unlink("$md5id-prange-attack-final.svg.gz");
	unlink("$md5id-prange-duration-final.svg.gz");
}

# Delete any uncompressed files:
unlink("$md5id-prange-attack.pmx");
unlink("$md5id-prange-duration.pmx");
unlink("$md5id-prange-attack.svg");
unlink("$md5id-prange-duration.svg");
unlink("$md5id-prange-attack-final.pmx");
unlink("$md5id-prange-duration-final.pmx");
unlink("$md5id-prange-attack-final.svg");
unlink("$md5id-prange-duration-final.svg");

# If full file pairs are not present, then delete solo file:
unlink("$md5id-prange-attack.svg.gz")         if !-r "$md5id-prange-attack.pmx.gz";
unlink("$md5id-prange-attack.pmx.gz")         if !-r "$md5id-prange-attack.svg.gz";
unlink("$md5id-prange-duration.svg.gz")       if !-r "$md5id-prange-duration.pmx.gz";
unlink("$md5id-prange-duration.pmx.gz")       if !-r "$md5id-prange-duration.svg.gz";
unlink("$md5id-prange-attack-final.svg.gz")   if !-r "$md5id-prange-attack-final.pmx.gz";
unlink("$md5id-prange-attack-final.pmx.gz")   if !-r "$md5id-prange-attack-final.svg.gz";
unlink("$md5id-prange-duration-final.svg.gz") if !-r "$md5id-prange-duration-final.pmx.gz";
unlink("$md5id-prange-duration-final.pmx.gz") if !-r "$md5id-prange-duration-final.svg.gz";

my $prangeOptions = "--score --all --hover --acc --no-title";

if (!-r "$md5id-prange-attack.pmx.gz") {
	my $command = "$prange $prangeOptions $inputfile";
	my $outputAttackPmx   = `$command`;
	if ($outputAttackPmx =~ /^\s*$/) {
		die "$md5id: No data for prange attack pmx content.\n";
	}
	open (FILE, ">$md5id-prange-attack.pmx") or die "ERROR: Cannot write file $md5id-prange-attack.pmx\n";
	print FILE $outputAttackPmx;
	close FILE;
	unlink("$md5id-prange-attack.pmx.gz");
	print STDERR "Compressing $md5id-prange-attack.pmx ...";
	`$gzip $md5id-prange-attack.pmx`;
	print STDERR " Done.\n";
}

if (!-r "$md5id-prange-duration.pmx.gz") {
	my $outputDurationPmx = `$prange $prangeOptions -d $inputfile`;
	if ($outputDurationPmx =~ /^\s*$/) {
		die "$md5id: No data for prange duration pmx content.\n";
	}
	open (FILE, ">$md5id-prange-duration.pmx") or die "ERROR: Cannot write file $md5id-prange-duration.pmx\n";
	print FILE $outputDurationPmx;
	close FILE;
	print STDERR "Compressing $md5id-prange-duration.pmx ...";
	unlink("$md5id-prange-duration.pmx.gz");
	`$gzip $md5id-prange-duration.pmx`;
	print STDERR " Done.\n";
}

if (!-r "$md5id-prange-attack-final.pmx.gz") {
	my $command = "$prange $prangeOptions --final $inputfile";
	my $outputAttackPmx   = `$command`;
	if ($outputAttackPmx =~ /^\s*$/) {
		die "$md5id: No data for prange attack final pmx content.\n";
	}
	open (FILE, ">$md5id-prange-attack-final.pmx") or die "ERROR: Cannot write file $md5id-prange-attack-final.pmx\n";
	print FILE $outputAttackPmx;
	close FILE;
	unlink("$md5id-prange-attack-final.pmx.gz");
	print STDERR "Compressing $md5id-prange-attack-final.pmx ...";
	`$gzip $md5id-prange-attack-final.pmx`;
	print STDERR " Done.\n";
}

if (!-r "$md5id-prange-duration-final.pmx.gz") {
	my $outputDurationPmx = `$prange $prangeOptions -d --final $inputfile`;
	if ($outputDurationPmx =~ /^\s*$/) {
		die "$md5id: No data for prange duration final pmx content.\n";
	}
	open (FILE, ">$md5id-prange-duration-final.pmx") or die "ERROR: Cannot write file $md5id-prange-duration-final.pmx\n";
	print FILE $outputDurationPmx;
	close FILE;
	print STDERR "Compressing $md5id-prange-duration-final.pmx ...";
	unlink("$md5id-prange-duration-final.pmx.gz");
	`$gzip $md5id-prange-duration-final.pmx`;
	print STDERR " Done.\n";
}

if (!-r "$md5id-prange-duration.svg.gz") {
	`zcat $md5id-prange-duration.pmx.gz | $pmx2svg > $md5id-prange-duration.svg && gzip $md5id-prange-duration.svg`;
}

if (!-r "$md5id-prange-attack.svg.gz") {
	`zcat $md5id-prange-attack.pmx.gz | $pmx2svg > $md5id-prange-attack.svg && gzip $md5id-prange-attack.svg`;
}

if (!-r "$md5id-prange-duration-final.svg.gz") {
	`zcat $md5id-prange-duration-final.pmx.gz | $pmx2svg > $md5id-prange-duration-final.svg && gzip $md5id-prange-duration-final.svg`;
}

if (!-r "$md5id-prange-attack-final.svg.gz") {
	`zcat $md5id-prange-attack-final.pmx.gz | $pmx2svg > $md5id-prange-attack-final.svg && gzip $md5id-prange-attack-final.svg`;
}






